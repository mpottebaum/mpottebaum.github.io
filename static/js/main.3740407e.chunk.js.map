{"version":3,"sources":["components/Home.js","content/experience.js","components/Experience.js","components/About.js","components/Eng.js","components/Wri.js","components/Mus.js","App.js","serviceWorker.js","index.js"],"names":["Home","opt","setOpt","className","href","onClick","style","color","experience","title","company","dates","desc","Experience","type","map","content","i","key","About","useState","exp","setExp","renderSmExp","id","src","alt","Eng","Wri","Mus","App","renderOpt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3740407e.chunk.js","sourcesContent":["import React from 'react'\nimport '../stylesheets/Home.css'\n\nconst Home = ({ opt, setOpt }) => {\n    return <div className='card home-card'>\n            <a href='#abt'><h1 className='title btn'>Mike Pottebaum</h1></a>\n            <ul className='nav-list'>\n                <li className='nav btn' onClick={() => setOpt('se')} style={opt === 'se' ? {color: '#11D0A9'} : {}}>software engineer</li>\n                <li className='nav btn' onClick={() => setOpt('wri')} style={opt === 'wri' ? {color: '#11D0A9'} : {}}>writer</li>\n                <li className='nav btn' onClick={() => setOpt('mus')} style={opt === 'mus' ? {color: '#11D0A9'} : {}}>musician</li>\n            </ul>\n        </div>\n}\n\nexport default Home","export const experience = {\n    'cyb': {\n        title: 'Team Lead, PCI Support Analyst',\n        company: 'Trustwave',\n        dates: '03/2018-02/2020',\n        desc: [\n            'Team Lead: conducted QA assessments and coached team members thru weekly 1-on-1 meetings.',\n            'Assisted businesses in meeting PCI DSS requirements.',\n            'Supported vulnerability scanning services for network and eCommerce.',\n            'Maintained a 98/100 QA score.'\n        ]\n    },\n    'mus': {\n        title: 'Writer/Performer, Venue Manager',\n        dates: '2014-Present',\n        desc: [\n            'Writes and performs original music in a variety of genres.',\n            'Organized and promoted house shows with touring and local artists for 3 years.'\n        ]\n        \n    },\n    'adm': {\n        title: 'Administrative Assistant',\n        company: 'Prairie Management & Development',\n        dates: '01/2015-03/2018',\n        desc: [\n            'Supported management with various administrative tasks as needed.',\n            'Property research, file organization, document delivery.'\n        ]\n    },\n    'pay': {\n        title: 'Payroll Clerk',\n        company: 'Prairie Management & Development',\n        dates: '08/2015-03/2018',\n        desc: [\n            'Prepared and processed payroll for 300+ employees.',\n            'Maintained employee records, tracking PTO requests, salary, documentation.'\n        ]\n        \n    },\n    'shi': {\n        title: 'Fulfillment Processor',\n        company: 'FunkyChunky, LLC',\n        dates: '09/2013-01/2015',\n        desc: [\n            'Packaged and processed candy shipments.',\n            'Copy-edited and maintained eCommerce site, adding new product pages and implementing promotions.',\n            'Designed nutrition labels.',\n            'Assisted with various clerical accounting tasks.'\n        ]\n        \n    }\n}","import React from 'react'\nimport { experience } from '../content/experience'\n\nconst Experience = ({ type }) => {\n\n    const renderDesc = () => {\n        return experience[type].desc.map((content, i) => {\n            return <li key={i} className='list-item'>{content}</li>\n        })\n    }\n\n    return <div className='exp-comp'>\n        <p className='list-item'>{experience[type].title}</p>\n        {\n            experience[type].company ?\n            <p className='list-item'>{experience[type].company}</p>\n            :\n            null\n        }\n        <p className='list-item'>{experience[type].dates}</p>\n        <ul className='exp-list'>\n            {renderDesc()}\n        </ul>\n    </div>\n}\n\nexport default Experience","import React, { useState } from 'react'\nimport Experience from './Experience'\nimport '../stylesheets/About.css'\n\nconst About = () => {\n\n    const [ exp, setExp ] = useState('cyb')\n\n    const renderSmExp = type => {\n        return <div className='exp-copy sm'>\n            {\n                exp === type ?\n                <Experience type={exp} />\n                :\n                null\n            }\n        </div>\n    }\n\n    return <div id='abt' className='abt'>\n        <div className='socials'>\n            <a className='social-link' href='https://github.com/mpottebaum'><img src='/logos/Github.png' alt='GitHub Profile' className='social' /></a>\n            <a className='social-link' href='https://www.linkedin.com/in/mike-pottebaum/'><img src='/logos/linkedin.png' alt='LinkedIn Profile' className='social' /></a>\n        </div>\n        <div className='card abt-card'>\n            <h1 className='title exp-title'>Experience</h1>\n            <div className='exp'>\n                <div className='exp-menu'>\n                    <p className='nav btn' onClick={() => setExp('cyb')} style={exp === 'cyb' ? {color: '#11D0A9'} : {}}>cybersecurity</p>\n                    {renderSmExp('cyb')}\n                    <p className='nav btn' onClick={() => setExp('mus')} style={exp === 'mus' ? {color: '#11D0A9'} : {}}>music</p>\n                    {renderSmExp('mus')}\n                    <p className='nav btn' onClick={() => setExp('adm')} style={exp === 'adm' ? {color: '#11D0A9'} : {}}>admin assistant</p>\n                    {renderSmExp('adm')}\n                    <p className='nav btn' onClick={() => setExp('pay')} style={exp === 'pay' ? {color: '#11D0A9'} : {}}>payroll</p>\n                    {renderSmExp('pay')}\n                    <p className='nav btn' onClick={() => setExp('shi')} style={exp === 'shi' ? {color: '#11D0A9'} : {}}>shipping/warehouse</p>\n                    {renderSmExp('shi')}\n                </div>\n                <div className='exp-copy lg'>\n                    <Experience type={exp} />\n                </div>\n            </div>\n        </div>\n    </div>\n}\n\nexport default About","import React from 'react'\nimport '../stylesheets/Eng.css'\n\nconst Eng = () => {\n    return <div>\n        <div className='lists eng-lists'>\n            <div className='projects'>\n                <h3>projects</h3>\n                <ul className='list'>\n                    <li className='list-item'>\n                        <a href='https://github.com/mpottebaum/battle-chi'><h4 className='item-title btn'>2 player board game</h4></a>\n                        <p>UI: React</p>\n                        <p className='project-tech'>API: Rails</p>\n                    </li>\n                    <li className='list-item'>\n                        <a href='https://github.com/mpottebaum/search-newspapers'><h4 className='item-title btn'>iSearchNewspapers</h4></a>\n                        <p>UI: React Native</p>\n                        <p className='project-tech'>API: Rails</p>\n                    </li>\n                    <li className='list-item'>\n                        <a href='https://github.com/mpottebaum/portfolio-2'><h4 className='item-title btn'>This site</h4></a>\n                        <p>UI: React + CSS</p>\n                    </li>\n                </ul>\n            </div>\n            <div>\n                <h3>tech</h3>\n                <ul className='list'>\n                    <li className='list-item'>JavaScript</li>\n                    <li className='list-item'>React + Redux</li>\n                    <li className='list-item'>Ruby on Rails</li>\n                    <li className='list-item'>HTML5 + CSS3</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Eng","import React from 'react'\nimport '../stylesheets/Wri.css'\n\nconst Wri = () => {\n    return <div className='lists'>\n        <h3>published stories</h3>\n        <ul className='list'>\n            <li className='list-item'>\n                <a href='https://medium.com/swlh/react-without-create-react-app-setting-up-a-dev-build-from-scratch-fefd5d9d6baa'><h4 className='item-title btn'>React without create-react-app</h4></a>\n                <p>Configuring Webpack</p>\n            </li>\n            <li className='list-item'>\n                <a href='https://medium.com/swlh/how-to-use-react-hooks-d8486cfd8797'><h4 className='item-title btn'>Using React Hooks</h4></a>\n                <p>useState and useEffect</p>\n            </li>\n            <li className='list-item'>\n                <a href='https://medium.com/weekly-webtips/how-to-make-clickable-dynamic-graphics-in-react-using-svg-22071f96623d'><h4 className='item-title btn'>SVG in React</h4></a>\n                <p>Clickable/dynamic map</p>\n            </li>\n            <li className='list-item'>\n                <a href='https://medium.com/swlh/deploying-a-rails-react-app-with-actioncable-to-heroku-cb5d42f41a2a'><h4 className='item-title btn'>Deploying to Heroku with ActionCable</h4></a>\n                <p>WebSockets in production</p>\n            </li>\n        </ul>\n        <a href='https://medium.com/@3body.net'><h3 className='btn wri-all'>all stories</h3></a>\n    </div>\n}\n\nexport default Wri","import React from 'react'\nimport '../stylesheets/Mus.css'\n\nconst Mus = () => {\n    return <div className='lists'>\n        <h3>projects</h3>\n        <ul className='list'>\n            <li className='list-item'>\n                <a href='https://elgrecoexplosive.bandcamp.com/'><h4 className='item-title btn'>El Greco Explosive</h4></a>\n                <p>Psychedelic folk/country with vocal harmonies for days.</p>\n            </li>\n            <li className='list-item'>\n                <a href='https://earlmanigault.bandcamp.com/'><h4 className='item-title btn'>man, A GOAT</h4></a>\n                <p>Exploratory pop music project. Synth pop, electro folk and beyond.</p>\n            </li>\n            <li className='list-item'>\n                <a href='https://universaltarantula.bandcamp.com/'><h4 className='item-title btn'>Universal Tarantula</h4></a>\n                <p>Eight-legged electro noise daydreams.</p>\n            </li>\n        </ul>\n    </div>\n}\n\nexport default Mus","import React, { useState } from 'react';\nimport Home from './components/Home'\nimport About from './components/About'\nimport Eng from './components/Eng'\nimport Wri from './components/Wri'\nimport Mus from './components/Mus'\nimport './App.css';\n\nfunction App() {\n\n  const [ opt, setOpt ] = useState('')\n\n  const renderOpt = () => {\n    switch(opt) {\n      case 'se':\n        return <Eng />\n      case 'wri':\n        return <Wri />\n      case 'mus':\n        return <Mus />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div>\n      <div className='main'>\n        <div className='home'>\n          <Home opt={opt} setOpt={setOpt} />\n          {\n            opt ?\n            <div className='card opt-card'>\n              {renderOpt()}\n            </div>\n            : null\n          }\n        </div>\n      </div>\n      <About />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}